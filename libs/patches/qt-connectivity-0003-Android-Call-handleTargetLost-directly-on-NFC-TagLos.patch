From dfdafce9a0353eeb55b57b679f67079b9af6fe81 Mon Sep 17 00:00:00 2001
From: Jens Trillmann <jens.trillmann@governikus.de>
Date: Tue, 17 Aug 2021 09:25:46 +0200
Subject: Android: Call handleTargetLost directly on NFC TagLostException

If in a transceive() a TagLostException occurs, subsequent calls to
transceive() may lead to an app crash with "JNI DETECTED ERROR IN
APPLICATION: GetMethodID received NULL jclass" on Android 11 if the
timer did not clean up first.

This fix calls handleTargetLost directly. This could lead to a race
condition in which the targetLost signal is send twice, which should be
handled correctly by the Qt code.

Pick-to: 5.15 6.2
Change-Id: I886e0bd436272ee393a92b0193fd4d40ed4e965e
Reviewed-by: Ivan Solovev <ivan.solovev@qt.io>
Reviewed-by: Alex Blasche <alexander.blasche@qt.io>
Reviewed-by: Lars Schmertmann <lars.schmertmann@governikus.de>
(cherry picked from commit 8362edb220cb77e7bcaf766dc8a9545d1c9246e5)
---
 src/nfc/qnearfieldtarget_android.cpp | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git x/qtconnectivity/src/nfc/qnearfieldtarget_android.cpp y/qtconnectivity/src/nfc/qnearfieldtarget_android.cpp
index 78468bf6..e42671eb 100644
--- x/qtconnectivity/src/nfc/qnearfieldtarget_android.cpp
+++ y/qtconnectivity/src/nfc/qnearfieldtarget_android.cpp
@@ -255,9 +255,9 @@ QNearFieldTarget::RequestId NearFieldTarget::sendCommand(const QByteArray &comma
     if (catchJavaExceptions()) {
         // Some devices (Samsung, Huawei) throw an exception when the card is lost:
         // "android.nfc.TagLostException: Tag was lost". But there seems to be a bug that
-        // isConnected still reports true. So we need to invalidate the target to allow
-        // checkIsTargetLost to recognize this missing card.
-        m_intent = QAndroidJniObject();
+        // isConnected still reports true. So we need to invalidate the target as soon as
+        // possible and treat the card as lost.
+        handleTargetLost();
 
         reportError(QNearFieldTarget::CommandError, requestId);
         return requestId;
-- 
2.33.0

